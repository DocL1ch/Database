// <auto-generated />
using Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryEntityProductEntity", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 3
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 4
                        },
                        new
                        {
                            CategoriesId = 3,
                            ProductsId = 1
                        },
                        new
                        {
                            CategoriesId = 3,
                            ProductsId = 2
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 1
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 3
                        });
                });

            modelBuilder.Entity("Database.Data.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Овощи и фрукты"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Кондитерская продукция"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Хлебобулочные изделия"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Свежий продукт"
                        });
                });

            modelBuilder.Entity("Database.Data.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Состав: Мука пшеничная 1 сорта, хлопья овсяные, хлопья ячменные, хлопья ржаные, семя подсолнечника, мука ржаная обдирная, солод, вода, сахар, соль",
                            Name = "Хлеб",
                            Price = 54.990000000000002
                        },
                        new
                        {
                            Id = 2,
                            Description = "Состав: мука пшеничная, крахмал, гидрогенизированное растительное масло, соль, солод, сахар, разрыхлитель Е503 (ii), эмульгатор Е322, дрожжи, регулятор кислотности Е524",
                            Name = "Соломка соленая",
                            Price = 73.989999999999995
                        },
                        new
                        {
                            Id = 3,
                            Description = "Цена указана за килограмм",
                            Name = "Огурцы тепличные",
                            Price = 122.98999999999999
                        },
                        new
                        {
                            Id = 4,
                            Description = "Состав: мука пшеничная, яйцо куриное, сахар песок, масло сливочное, молоко цельное, патока, соль",
                            Name = "Торт",
                            Price = 399.99000000000001
                        },
                        new
                        {
                            Id = 5,
                            Description = "Нержавеющая сталь",
                            Name = "Ложка",
                            Price = 219.49000000000001
                        });
                });

            modelBuilder.Entity("CategoryEntityProductEntity", b =>
                {
                    b.HasOne("Database.Data.CategoryEntity", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Data.ProductEntity", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
